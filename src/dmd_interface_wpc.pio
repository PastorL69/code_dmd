.define PUBLIC dmd_reader_interrupt 0
.define DE 0
.define RDATA 1
.define RCLK 2
.define COLLAT 3
.define DOTCLK 4
.define SDATA 5
.define PLANE_START 4


.program dmd_reader_wpc
    set x, 31          ; load 31, 5 bits is max allowed (0b11111)
    in x, 5            ; shift in 5 bits, isr is 31 now
    set x, 31          ; load 31, 5 bits is max allowed (0b11111)
    in x, 5            ; shift in 5 bits, isr is 1023 now
    set x, 3           ; load 3
    in x, 2            ; shift in 2 bits, isr is 4095 now (128x32 - 1)
    mov y, isr         ; copy 4095 to y

.wrap_target
    mov x, y           ; load number of pixels per plane (128x32 - 1)
    mov isr, null      ; reset shift counter

    irq clear PLANE_START
    wait irq PLANE_START

plane_loop:
    wait 0 gpio DOTCLK ; no DOTCLK period or faling edge of the previous
    in null 1          ; add a 0 to the output as WPC is 2bit/px
    wait 1 gpio DOTCLK ; raising edge
    in pins 1          ; read 1 bit pin data
    jmp x-- plane_loop
.wrap


.program dmd_framedetect_wpc
.wrap_target
    wait 0 gpio RDATA
    wait 1 gpio RDATA
    wait 1 gpio DE
    wait 0 gpio DOTCLK
    nop [31]
    irq PLANE_START
.wrap

% c-sdk {
static inline void dmd_reader_wpc_program_init(PIO pio, uint sm, uint offset) {
    pio_sm_config c = dmd_reader_wpc_program_get_default_config(offset);

    // Set the IN pin, we don't use any other
    sm_config_set_in_pins(&c, 5); // SDATA

    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, 4); // DOTCLK
    pio_gpio_init(pio, 5); // SDATA

    // Set the pin direction at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, 4, 2, false); // DOTCLK, SDATA

    // Shifting to left matches the customary MSB-first ordering of SPI.
    sm_config_set_in_shift(
        &c,
        false, // Shift-to-right = false
        true,  // Autopull enabled
        32     // Autopull threshold
    );

    // We only send, so disable the TX FIFO to make the RX FIFO deeper.
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);

    // Load our configuration, do not yet start the program
    pio_sm_init(pio, sm, offset, &c);
}
%}

% c-sdk {
static inline void dmd_framedetect_wpc_program_init(PIO pio, uint sm, uint offset) {
    pio_sm_config c = dmd_framedetect_wpc_program_get_default_config(offset);

    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, 0); // DE
    pio_gpio_init(pio, 1); // RDATA
    pio_gpio_init(pio, 4); // DOTCLK

    // Set the pin direction at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, 0, 2, false); // DE, RDATA
    pio_sm_set_consecutive_pindirs(pio, sm, 4, 1, false); // DOTCLK

    // Load our configuration, do not yet start the program
    pio_sm_init(pio, sm, offset, &c);
}
%}
