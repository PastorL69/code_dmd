.program dmd_reader_wpc

; Send using an external clock on the SPI interface
; - IN pin 0 is the DATA pin
; - Autopush is enabled, threshold 32
;

.define PUBLIC dmd_reader_interrupt 0
.define de 0
.define rdata 1
.define rclk 2
.define collat 3
.define dotclk 4
.define sdata 5

    ; synchronize on the first line
    wait 0 gpio rdata ; wait for RDATA to go L
    wait 1 gpio rdata ; wait for RDATA to go L
    set x, 31
lineloop:
    wait 1 gpio rclk
    wait 0 gpio rclk
    jmp x-- lineloop

    wait 1 gpio rclk

    ; initialize y with 12288 = number of pixels (128x32) * number of planes
    set x, 3
    in x, 2
    in null, 12
    mov y, isr

.wrap_target

    mov x, y       ; load number of pixels
    mov isr, null  ; reset shift counter

    wait 1 gpio rdata
    wait 0 gpio rclk  
    wait 1 gpio rclk

dotloop:
    wait 0 gpio 4  ; falling edge
    in null 1      ; add a 0 to the output as WPC is 2bit/px
    wait 1 gpio 4  ; raising edge
    in pins 1      ; read pin data

    jmp x-- dotloop

.wrap


% c-sdk {
static inline void dmd_reader_wpc_program_init(PIO pio, uint sm, uint offset) {

    uint8_t datapin = 5;
    pio_sm_config c = dmd_reader_wpc_program_get_default_config(offset);

    // Set the IN base pin to the provided `pin` parameter. This is the data pin, we don't use any other
    sm_config_set_in_pins(&c, datapin);

    // Set the pin direction at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, 0, 6, false);

    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, 0);
    pio_gpio_init(pio, 1);
    pio_gpio_init(pio, 2);
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 4);
    pio_gpio_init(pio, 5);

    // Shifting to left matches the customary MSB-first ordering of SPI.
    sm_config_set_in_shift(
        &c,
        false, // Shift-to-right = false
        true,  // Autopull enabled
        32     // Autopull threshold
    );

    // We only send, so disable the TX FIFO to make the RX FIFO deeper.
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);

    // Load our configuration, do not yet start the program
    pio_sm_init(pio, sm, offset, &c);
}
%}