.define de 0
.define rdata 1
.define rclk 2
.define collat 3
.define dotclk 4
.define sdata 5


.program dmd_reader_whitestar

; Send using an external clock on the SPI interface
; - IN pin 0 is the DATA pin

    ; initialize y with 4096 = number of pixels (128x32)
    set x, 1
    in x, 1
    in null, 13
    mov y, isr

.wrap_target

    mov x, y       ; load number of pixels
    mov isr, null  ; reset shift counter

    irq clear 4 
    wait irq 4


; this is the loop for the most significant bit
dotloop1:          
    wait 0 gpio dotclk  ; falling edge
    wait 1 gpio dotclk  ; raising edge
    in null 3           ; padding
    in pins 1           ; read pin data
    jmp x-- dotloop1

    mov x, y            ; load number of pixels
    mov isr, null       ; reset shift counter

; There's an empty line between LSB and HSB plane
    wait 0 gpio rclk
    wait 1 gpio rclk

; this is the loop for the least significant bit
; in this loop, the bit value is multipled by 2 by shiting it one bit
dotloop2:
    wait 0 gpio dotclk  ; falling edge
    wait 1 gpio dotclk  ; raising edge
    in null 2           ; padding
    in pins 1           ; read pin data
    in null 1           ; multiply *2
    jmp x-- dotloop2


.wrap

.program dmd_framedetect_whitestar

.wrap_target

; synchronize on the least significant plane
    wait 0 gpio rdata 
    wait 1 gpio rdata
    irq 4

.wrap


% c-sdk {
static inline void dmd_reader_whitestar_program_init(PIO pio, uint sm, uint offset) {

    uint8_t datapin = 5;
    pio_sm_config c = dmd_reader_whitestar_program_get_default_config(offset);

    // Set the IN base pin to the provided `pin` parameter. This is the data pin, we don't use any other
    sm_config_set_in_pins(&c, datapin);

    // Set the pin direction at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, 0, 6, false);

    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, 0);
    pio_gpio_init(pio, 1);
    pio_gpio_init(pio, 2);
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 4);
    pio_gpio_init(pio, 5);

    // Shifting to left matches the customary MSB-first ordering of SPI.
    sm_config_set_in_shift(
        &c,
        false, // Shift-to-right = false
        true,  // Autopull enabled
        32     // Autopull threshold
    );

    // We only send, so disable the TX FIFO to make the RX FIFO deeper.
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);

    // Load our configuration, do not yet start the program
    pio_sm_init(pio, sm, offset, &c);
}
%}

% c-sdk {
static inline void dmd_framedetect_whitestar_program_init(PIO pio, uint sm, uint offset) {

    pio_sm_config c = dmd_framedetect_whitestar_program_get_default_config(offset);

    // Set the pin direction at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, 0, 6, false);

    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, 0);
    pio_gpio_init(pio, 1);
    pio_gpio_init(pio, 2);
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 4);
    pio_gpio_init(pio, 5);

    // Load our configuration, do not yet start the program
    pio_sm_init(pio, sm, offset, &c);
}
%}